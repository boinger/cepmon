#!/usr/bin/env jruby

$: << File.join(File.dirname($0), "..", "lib")
$: << File.join(File.dirname($0), "..", "vendor")

require "cepmon/config"
require "cepmon/engine"
require "cepmon/eventlistener"
require "cepmon/libs"
require "cepmon/metric"

Logger = org.apache.log4j.Logger
layout = org.apache.log4j.SimpleLayout.new()
appender = org.apache.log4j.ConsoleAppender.new(layout)
Logger.getRootLogger().addAppender(appender)
Logger.getRootLogger().setLevel(org.apache.log4j.Level::WARN)

config = CEPMon::Config.new
engine = CEPMon::Engine.new
event_listener = CEPMon::EventListener.new(true)

engine.add_statements(config, event_listener)

linenum = 0
File.open("testdata.txt").each do |line|
  linenum += 1
  line.chomp!
  case line
  when /^(#|$)/
    next
  when "clear"
    engine.admin.destroyAllStatements()
    engine.add_statements(config, event_listener)
    event_listener.clear_history
  when /^assert (!)?([^ ]+)( .*)?/
    negate, statement, variables = $1, $2, $3

    if negate
      # make sure the statement hasn't fired
      hist = event_listener.history.select { |h| h[0] == statement }
      if hist.length > 0
        raise "line #{linenum}: assert !#{statement} failed: #{hist.inspect}"
      end

      next
    end

    # make sure the statement fired
    hist = event_listener.history.select { |h| h[0] == statement }
    if hist.length == 0
      raise "line #{linenum}: assert #{statement} failed, did not fire"
    end

    # check variables
    variables ||= ""
    variables.strip.split(/ +/).each do |eq|
      var, value = eq.split("=", 2)
      # use the last event that fired, for now
      event_vars = hist.last[1]
      #puts "checking #{var} == #{value.inspect}: #{event_vars[var].inspect}"
      if value != event_vars[var].to_s
        raise "line #{linenum}: assert #{statement} #{var}==#{value} failed, actual value is #{event_vars[var]}"
      end
    end

  else
    CEPMon::Metric.new(line).send(engine.runtime)
  end
end
